apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j
  namespace: neo4j
  labels:
    app: neo4j
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: neo4j
        image: neo4j:enterprise
        imagePullPolicy: IfNotPresent
        env:
        - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
          value: "yes"
        - name: NEO4J_AUTH
          value: "neo4j/neo4j-123"
        - name: NEO4JLABS_PLUGINS
          value: '["apoc", "graph-data-science", "bloom"]'
        ports:
        - name: http
          containerPort: 7474
        - name: bolt
          containerPort: 7687
        livenessProbe:
          tcpSocket:
            port: 7687
          initialDelaySeconds: 600
          periodSeconds: 60
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: neo4j-backup
          mountPath: "/backups"
        - name: neo4j-logs
          mountPath: "/logs"
      volumes:
        - name: neo4j-backup
          persistentVolumeClaim:
            claimName: pvc-neo4j-backup
        - name: neo4j-logs
          emptyDir: {}
