apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j
  namespace: neo4j
  labels:
    app: neo4j
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 7474
        runAsGroup: 7474
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
      containers:
      - name: neo4j
        image: neo4j:enterprise
        imagePullPolicy: IfNotPresent
        env:
        - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
          valueFrom:
            configMapKeyRef:
              name: neo4j-config
              key: neo4j_accept_licence_agreement
        - name: NEO4J_AUTH
          valueFrom:
            secretKeyRef:
              name: neo4j-secret
              key: neo4j_auth
        - name: NEO4JLABS_PLUGINS
          valueFrom:
            configMapKeyRef:
              name: neo4j-config
              key: neo4j_plugins
        ports:
        - name: http
          containerPort: 7474
        - name: bolt
          containerPort: 7687
        readinessProbe:
          tcpSocket:
            port: 7687
          initialDelaySeconds: 60
          periodSeconds: 60
        livenessProbe:
          tcpSocket:
            port: 7687
          initialDelaySeconds: 120
          periodSeconds: 60
        volumeMounts:
        - name: neo4j-backups
          mountPath: "/backups"
      volumes:
        - name: neo4j-backups
          persistentVolumeClaim:
            claimName: neo4j-backups
